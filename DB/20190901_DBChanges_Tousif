use NFFM_be_sql
GO
/****** Object:  StoredProcedure [dbo].[FreightForwardingBOL_AddUpdate]    Script Date: 9/1/19 14:52:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER procedure [dbo].[BillOfLading_GetAll] 
(
@receivingId nvarchar(100) = Null
)

As Begin
Declare @TotalRecords as int = 0;
Exec Truckers_GetAll @SortBy = 'Trucker' -- table1

IF ISNULL(@receivingId, 0) = 0
BEGIN
Set @receivingId = (Select max(receivingId) from tblReceivingInfo Where Deleted = 0)
END

select Distinct ROW_NUMBER() OVER (Order by receivingId) AS CurrentRecord, r.receivingID, r.truckerID, r.ReceivedDate, r.WeekEndingDate,r.BatchID,t.Trucker 
into #tempReceivingInfo
from tblReceivingInfo r -- table2
inner join tblTruckers t on t.truckerID = r.truckerID
Where  r.Deleted = 0

--********

Declare @CurrentRow as int, @firstReceivingId as int, @previousReceivingId as int, @nextReceivingId as int,  @lastReceivingId as int
IF @receivingId IS NULL
BEGIN
Set @receivingId = (Select max(receivingId) from tblReceivingInfo Where Deleted = 0)
END

--select * from #tempReceivingInfo where receivingId = @receivingId

set @CurrentRow = (select currentRecord from #tempReceivingInfo where receivingId = @receivingId)
set @firstReceivingId = (select receivingId from #tempReceivingInfo where currentRecord = 1)
set @previousReceivingId = (select receivingId from #tempReceivingInfo where currentRecord =  @CurrentRow - 1)
set @nextReceivingId = (select receivingId from #tempReceivingInfo where currentRecord =  @CurrentRow + 1)
set @lastReceivingId = (select max(receivingId) from #tempReceivingInfo)


--*******

Set @TotalRecords = (select count(1) From #tempReceivingInfo)

select @TotalRecords As TotalRecords, @firstReceivingId as firstReceivingId, Isnull(@previousReceivingId, 0) aS previousReceivingId, Isnull(@nextReceivingId, 0) aS nextReceivingId, @lastReceivingId As lastReceivingId, * from #tempReceivingInfo r
where (r.receivingID = @receivingId)
 --where batchId like '%cw050505%' and r.truckerID = '540' and r.WeekEndingDate = '2019-01-03 00:00:00.000'

If exists(select  receivingId
from tblLineItems_Receiving lineitem
inner join tblReceivingInfo_LineItems info on info.lineItemID = lineitem.lineItemID
where receivingId = @receivingId and info.deleted = 0)
BEGIN
select  receivingId,info.lineitemid,BillOfLadingNumber,cust.Name As CustomerName, Shipper,sc.[Sales Code] As SalesCode, sc.Description, sc.[Unit of Measure] As UnitOfMeasure, lineitem.Quantity As Qty, -- table3
sc.Price, lineitem.Quantity * Isnull(sc.Price, 0) As Ext from tblLineItems_Receiving lineitem
inner join tblReceivingInfo_LineItems info on info.lineItemID = lineitem.lineItemID
Left join tblCustomers cust on cust.customerID = lineitem.customerID
left join tblShippers ship on ship.shipperID = lineitem.shipperID
left join tblSalesCodes sc on sc.salesCodeID = lineitem.salesCodeID
where receivingId = @receivingId and info.deleted = 0
order by lineitemId
--where lineItemID in (select lineItemid from tblReceivingInfo_LineItems where receivingId = 110544)
END
ELSE
BEGIN
select  @receivingId receivingId, '' lineitemid, '' BillOfLadingNumber, '' As CustomerName, '' Shipper,'' As SalesCode, '' [Description], '' As UnitOfMeasure, 0 As Qty, 
cast(0 as float) As Price, cast(0 as float) As Ext
END

Exec Customers_GetAll @ShowAll = 0 -- table 3

Exec Shippers_GetAll -- table 4

Exec SalesCode_GetAll -- table 5


select  @receivingId receivingId, '' lineitemid, '' BillOfLadingNumber, '' As CustomerName, '' Shipper,'' As SalesCode, '' [Description], '' As UnitOfMeasure, 0 As Qty, -- table6
0 As Price, 0 As Ext

END

GO
ALTER procedure [dbo].[FreightForwardingBOL_AddUpdate]
(
@shippingId As nvarchar(50),
@lineItemId As nvarchar(50),
@billOfLading As nvarchar(50),
@customerName As nvarchar(200),
@shipper As nvarchar(50),
@salesCode As nvarchar(50),
@quantity As nvarchar(10),
@ShippedDate As nvarchar(20),
@weekEndingDate As nvarchar(20),
@truckerId As nvarchar(10) = 0,
@batchId	As nvarchar(50) = ''
)
As
BEGIN
	DECLARE @CreatedLineID INT = 0

Declare @customerId as int = 0,
@shipperId as int = 0,
@salesCodeId as int = 0,
@newCustomerId as int = 0,
@newShipperId as int = 0,
@newSalesCodeId as int = 0

Set @newCustomerId = (select Distinct top 1 CustomerId From tblCustomers where name = @customerName)
Set @newShipperId = (select Distinct top 1 ShipperId From tblShippers where Shipper = @shipper)
Set @newSalesCodeId = (Select Distinct top 1 SalesCodeId from tblSalesCodes where [Sales Code] = @salesCode)

If @truckerId > 0 AND @shippingId = '0'
BEGIN


set @shippingId = (select max(shippingID) from tblShippingInfo) + 1

Insert into tblShippingInfo
values(@shippingId, @truckerId, @ShippedDate, @weekEndingDate, @batchId, 0)

END
ELSE If @truckerId > 0 AND @shippingId <> '0'
BEGIN

Update tblShippingInfo 
set truckerID = @truckerId 
where shippingID = @shippingId

END
ELSE IF @batchId <> ''
BEGIN

Update tblShippingInfo 
set BatchID = @batchId 
where shippingID = @shippingId

END
ELSE IF (@ShippedDate <> '' or @weekEndingDate <> '')
BEGIN

Update tblShippingInfo 
set ShippedDate = @ShippedDate, 
WeekEndingDate = @weekEndingDate
where shippingID = @shippingId

END
ELSE IF (@shippingId <> '' AND @lineItemId = '')
BEGIN

set @lineItemId = (select max(lineItemId) from tblLineItems_Shipping) + 1
		SET @CreatedLineID = @lineItemId
insert into tblShippingInfo_LineItems
values(@shippingId, @lineItemId, 0)

insert into tblLineItems_Shipping
values(@lineItemId, @billOfLading, ISNULL(@newCustomerId, -1), ISNULL(@newShipperId, -1), ISNULL(@newSalesCodeId, -1), ISNULL(@quantity, -1), 0)

--delete from tblLineItems_Shipping where lineitemId > 1421522
--delete from tblShippingInfo_LineItems where lineitemId > 1421522
END
ELSE
BEGIN 
		SET @CreatedLineID = @lineItemId
select @customerId = customerId, @shipperId = shipperID, @salesCodeId = salesCodeID From tblLineItems_Shipping lineitem
inner join tblShippingInfo_LineItems info on info.lineItemID = lineitem.lineItemID where lineitem.lineItemID = @lineItemId ANd shippingID = @shippingId;



BEGIN TRANSACTION;

update tblLineItems_Shipping
set BillOfLadingNumber = @billOfLading,
Quantity = @quantity,
CustomerId = @newCustomerId,
ShipperId = @newShipperId,
SalesCodeId = @newSalesCodeId
where lineItemID = @lineItemId --AND customerID = @CustomerId



COMMIT;

END
	select @CreatedLineID as CreatedLineID
END

GO

ALTER procedure [dbo].[FreightForwardingBOL_GetAll]
(
@shippingId nvarchar(100) = Null
)

As Begin
Declare @TotalRecords as int = 0;
Exec Truckers_GetAll @SortBy = 'Trucker' -- table1

IF ISNULL(@shippingId, 0) = 0
BEGIN
Set @shippingId = (Select max(shippingID) from tblShippingInfo Where Deleted = 0)
END
select Distinct ROW_NUMBER() OVER (Order by shippingID) AS CurrentRecord, r.shippingID, r.truckerID, r.ShippedDate, r.WeekEndingDate,r.BatchID,t.Trucker 
into #tempShippingInfo
from tblShippingInfo r -- table2
inner join tblTruckers t on t.truckerID = r.truckerID
Where  r.Deleted = 0

--********

Declare @CurrentRow as int, @firstshippingID as int, @previousshippingID as int, @nextshippingID as int,  @lastshippingID as int
IF @shippingId IS NULL
BEGIN
Set @shippingId = (Select max(shippingID) from tblShippingInfo Where Deleted = 0)
END

--select * from #tempShippingInfo where shippingID = @shippingId

set @CurrentRow = (select currentRecord from #tempShippingInfo where shippingID = @shippingId)
set @firstshippingID = (select shippingID from #tempShippingInfo where currentRecord = 1)
set @previousshippingID = (select shippingID from #tempShippingInfo where currentRecord =  @CurrentRow - 1)
set @nextshippingID = (select shippingID from #tempShippingInfo where currentRecord =  @CurrentRow + 1)
set @lastshippingID = (select max(shippingID) from #tempShippingInfo)


--*******

Set @TotalRecords = (select count(1) From #tempShippingInfo)

select @TotalRecords As TotalRecords, @firstshippingID as firstshippingID, Isnull(@previousshippingID, 0) aS previousshippingID, Isnull(@nextshippingID, 0) aS nextshippingID, @lastshippingID As lastshippingID, * from #tempShippingInfo r
where (r.shippingID = @shippingId)
 --where batchId like '%cw050505%' and r.truckerID = '540' and r.WeekEndingDate = '2019-01-03 00:00:00.000'

If exists(select  shippingID 
from tblLineItems_Shipping lineitem
inner join tblShippingInfo_LineItems info on info.lineItemID = lineitem.lineItemID
where shippingID = @shippingId and info.deleted = 0)
BEGIN
select  shippingID,info.lineitemid,BillOfLadingNumber,cust.Name As CustomerName, Shipper,sc.[Sales Code] As SalesCode, sc.Description, sc.[Unit of Measure] As UnitOfMeasure, lineitem.Quantity As Qty, -- table3
sc.Price, lineitem.Quantity * Isnull(sc.Price, 0) As Ext from tblLineItems_Shipping lineitem
inner join tblShippingInfo_LineItems info on info.lineItemID = lineitem.lineItemID
Left join tblCustomers cust on cust.customerID = lineitem.customerID
left join tblShippers ship on ship.shipperID = lineitem.shipperID
left join tblSalesCodes sc on sc.salesCodeID = lineitem.salesCodeID
where shippingID = @shippingId and info.deleted = 0
order by lineitemId
--where lineItemID in (select lineItemid from tblShippingInfo_LineItems where shippingID = 110544)
END
ELSE
BEGIN
select  @shippingId shippingID, '' lineitemid, '' BillOfLadingNumber, '' As CustomerName, '' Shipper,'' As SalesCode, '' [Description], '' As UnitOfMeasure, 0 As Qty, 
cast(0 as float) As Price, cast(0 as float) As Ext
END

Exec Customers_GetAll @ShowAll = 0 -- table 3

Exec Shippers_GetAll -- table 4

Exec SalesCode_GetAll -- table 5


select  @shippingId shippingID, '' lineitemid, '' BillOfLadingNumber, '' As CustomerName, '' Shipper,'' As SalesCode, '' [Description], '' As UnitOfMeasure, 0 As Qty, -- table6
0 As Price, 0 As Ext

END


GO


