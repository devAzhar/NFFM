use nffm_be_sql
GO
ALTER procedure Truckers_GetAll 
(@SortBy nvarchar(100) = Null)
AS BEGIN

if (@SortBy IS NULL)
BEGIN
select truckerID, [Trucker] from tblTruckers where deleted = 0  
END
ELSE
BEGIN
select truckerID, [Trucker] from tblTruckers where deleted = 0  
Order by [Trucker]
END
END
GO
ALTER procedure Customers_GetAll 
(
@ShowAll int = 1
)
AS BEGIN
--select CustomerID, [Customer No], Name, CoOpMember As [CoOp Member], FF_Tier As [FF Tier] ,CustomerPricing As Price from tblCustomers where deleted = 0  order by customerId desc
select CustomerID, [Customer No], Isnull(Name, '') as Name, CoOpMember As [CoOp Member], FF_Tier As [FF Tier],CustomerPricing As Price from tblCustomers where deleted = 0  and Name is not null
AND(@ShowAll = 1 or (@ShowAll = 0 AND CoOpMember = 1))
--AND (name like '%Emerald Seafood%' or name like '%Lockwood%' or name like '%slavin%' )
--order by customerId desc
END
GO


ALTER Procedure BillOfLading_GetAll
(
@receivingId nvarchar(100) = Null
)

As Begin
Declare @TotalRecords as int = 0;
Exec Truckers_GetAll @SortBy = 'Trucker' -- table1

IF ISNULL(@receivingId, 0) = 0
BEGIN
Set @receivingId = (Select max(receivingId) from tblReceivingInfo Where Deleted = 0)
END

select Distinct ROW_NUMBER() OVER (Order by receivingId) AS CurrentRecord, r.receivingID, r.truckerID, r.ReceivedDate, r.WeekEndingDate,r.BatchID,t.Trucker 
into #tempReceivingInfo
from tblReceivingInfo r -- table2
inner join tblTruckers t on t.truckerID = r.truckerID
Where  r.Deleted = 0

--********

Declare @CurrentRow as int, @firstReceivingId as int, @previousReceivingId as int, @nextReceivingId as int,  @lastReceivingId as int
IF @receivingId IS NULL
BEGIN
Set @receivingId = (Select max(receivingId) from tblReceivingInfo Where Deleted = 0)
END

--select * from #tempReceivingInfo where receivingId = @receivingId

set @CurrentRow = (select currentRecord from #tempReceivingInfo where receivingId = @receivingId)
set @firstReceivingId = (select receivingId from #tempReceivingInfo where currentRecord = 1)
set @previousReceivingId = (select receivingId from #tempReceivingInfo where currentRecord =  @CurrentRow - 1)
set @nextReceivingId = (select receivingId from #tempReceivingInfo where currentRecord =  @CurrentRow + 1)
set @lastReceivingId = (select max(receivingId) from #tempReceivingInfo)


--*******

Set @TotalRecords = (select count(1) From #tempReceivingInfo)

select @TotalRecords As TotalRecords, @firstReceivingId as firstReceivingId, Isnull(@previousReceivingId, 0) aS previousReceivingId, Isnull(@nextReceivingId, 0) aS nextReceivingId, @lastReceivingId As lastReceivingId, * from #tempReceivingInfo r
where (r.receivingID = @receivingId)
 --where batchId like '%cw050505%' and r.truckerID = '540' and r.WeekEndingDate = '2019-01-03 00:00:00.000'

select  receivingId,info.lineitemid,BillOfLadingNumber,cust.Name As CustomerName, Shipper,sc.[Sales Code] As SalesCode, sc.Description, sc.[Unit of Measure] As UnitOfMeasure, lineitem.Quantity As Qty, -- table3
sc.Price, lineitem.Quantity * Isnull(sc.Price, 0) As Ext from tblLineItems_Receiving lineitem
inner join tblReceivingInfo_LineItems info on info.lineItemID = lineitem.lineItemID
Left join tblCustomers cust on cust.customerID = lineitem.customerID
left join tblShippers ship on ship.shipperID = lineitem.shipperID
left join tblSalesCodes sc on sc.salesCodeID = lineitem.salesCodeID
where receivingId = @receivingId and info.deleted = 0
order by lineitemId
--where lineItemID in (select lineItemid from tblReceivingInfo_LineItems where receivingId = 110544)

Exec Customers_GetAll @ShowAll = 0 -- table 3

Exec Shippers_GetAll -- table 4

Exec SalesCode_GetAll -- table 5


select  @receivingId receivingId, '' lineitemid, '' BillOfLadingNumber, '' As CustomerName, '' Shipper,'' As SalesCode, '' [Description], '' As UnitOfMeasure, 0 As Qty, -- table6
0 As Price, 0 As Ext

END
GO
ALTER Procedure BillOfLading_Report_GetAll --'1/1/2019', 'q'
(
@receivedDate datetime = '',
@batchId nvarchar(50) = '',
@invoiceNumber nvarchar(50) = null,
@billOfLadingNumber nvarchar(50) = '',
@customerName nvarchar(200) = ''
)

As Begin

if (@receivedDate = '')
BEGIN
set @receivedDate = (select max(ReceivedDate) from tblReceivingInfo where Deleted = 0 and ReceivedDate is not null)
END

select top 20 ReceivedDate,BatchID, SUBSTRING(CONVERT(CHAR(10), WeekEndingDate, 12),3,4) + Right(LTRIM(RTrim([Customer No])),2) + SUBSTRING([Customer No],4,1) As InvoiceNumber, info.receivingID,info.lineitemid,BillOfLadingNumber,cust.Name As CustomerName, Shipper,sc.[Sales Code] As SalesCode, sc.Description, sc.[Unit of Measure] As UnitOfMeasure, lineitem.Quantity As Qty, 
-- table3
sc.Price, lineitem.Quantity * Isnull(sc.Price, 0) As Ext from tblLineItems_Receiving lineitem
inner join tblReceivingInfo_LineItems info on info.lineItemID = lineitem.lineItemID
inner join tblReceivingInfo on tblReceivingInfo.receivingID = info.receivingID
Left join tblCustomers cust on cust.customerID = lineitem.customerID
left join tblShippers ship on ship.shipperID = lineitem.shipperID
left join tblSalesCodes sc on sc.salesCodeID = lineitem.salesCodeID
where (@receivedDate = '' or ReceivedDate = @receivedDate)
	AND (@batchId = '' or BatchID = @batchId)
	AND (@invoiceNumber is null ) --or invoi = @invoiceNumber)
	AND (@billOfLadingNumber = '' or BillOfLadingNumber = @billOfLadingNumber)
	AND (@customerName = '' or Name = @customerName)
	AND info.deleted = 0
order by lineitemId
--where lineItemID in (select lineItemid from tblReceivingInfo_LineItems where receivingId = 110544)


Exec ReceivedDate_GetAll -- table 2

Exec Batches_GetAll -- table 3

Exec BillOfLadingNumbers_GetAll -- table 4

Exec Customers_GetAll -- table 5

END
GO
IF OBJECT_ID('Batches_GetAll', 'P') IS NOT NULL
BEGIN
Drop procedure Batches_GetAll
END

IF OBJECT_ID('ReceivedDate_GetAll', 'P') IS NOT NULL
BEGIN
Drop procedure ReceivedDate_GetAll
END
GO
IF OBJECT_ID('BillOfLadingNumbers_GetAll', 'P') IS NOT NULL
BEGIN
Drop procedure BillOfLadingNumbers_GetAll
END
GO
IF OBJECT_ID('FreightForwardingBOL_GetAll', 'P') IS NOT NULL
BEGIN
Drop procedure FreightForwardingBOL_GetAll
END
GO

CREATE procedure Batches_GetAll
AS 
BEGIN
--select ShipperID, [Shipper] from tblShippers where deleted = 0  and Shipper is not null
select distinct BatchID from tblReceivingInfo where batchId is not null and batchId <> '' and deleted = 0 order by BatchID desc
END
GO
CREATE procedure ReceivedDate_GetAll
AS BEGIN
--select ShipperID, [Shipper] from tblShippers where deleted = 0  and Shipper is not null
select distinct ReceivedDate from tblReceivingInfo where Deleted = 0 and ReceivedDate is not null order by receivedDate desc
END
GO
CREATE procedure BillOfLadingNumbers_GetAll
AS BEGIN
select distinct top 5000 BillOfLadingNumber from tblLineItems_Receiving where Deleted = 0
END
GO
--Alter table tblShippingInfo
--Add Deleted bit not null default 0

--Alter table tblShippingInfo_LineItems
--Add Deleted bit not null default 0

--Alter table tblLineItems_Shipping
--Add Deleted bit not null default 0

CREATE Procedure FreightForwardingBOL_GetAll
(
@shippingId nvarchar(100) = Null
)

As Begin
Declare @TotalRecords as int = 0;
Exec Truckers_GetAll -- table1

IF ISNULL(@shippingId, 0) = 0
BEGIN
Set @shippingId = (Select max(shippingID) from tblShippingInfo Where Deleted = 0)
END
select Distinct ROW_NUMBER() OVER (Order by shippingID) AS CurrentRecord, r.shippingID, r.truckerID, r.ShippedDate, r.WeekEndingDate,r.BatchID,t.Trucker 
into #tempShippingInfo
from tblShippingInfo r -- table2
inner join tblTruckers t on t.truckerID = r.truckerID
Where  r.Deleted = 0

--********

Declare @CurrentRow as int, @firstshippingID as int, @previousshippingID as int, @nextshippingID as int,  @lastshippingID as int
IF @shippingId IS NULL
BEGIN
Set @shippingId = (Select max(shippingID) from tblShippingInfo Where Deleted = 0)
END

--select * from #tempShippingInfo where shippingID = @shippingId

set @CurrentRow = (select currentRecord from #tempShippingInfo where shippingID = @shippingId)
set @firstshippingID = (select shippingID from #tempShippingInfo where currentRecord = 1)
set @previousshippingID = (select shippingID from #tempShippingInfo where currentRecord =  @CurrentRow - 1)
set @nextshippingID = (select shippingID from #tempShippingInfo where currentRecord =  @CurrentRow + 1)
set @lastshippingID = (select max(shippingID) from #tempShippingInfo)


--*******

Set @TotalRecords = (select count(1) From #tempShippingInfo)

select @TotalRecords As TotalRecords, @firstshippingID as firstshippingID, Isnull(@previousshippingID, 0) aS previousshippingID, Isnull(@nextshippingID, 0) aS nextshippingID, @lastshippingID As lastshippingID, * from #tempShippingInfo r
where (r.shippingID = @shippingId)
 --where batchId like '%cw050505%' and r.truckerID = '540' and r.WeekEndingDate = '2019-01-03 00:00:00.000'

select  shippingID,info.lineitemid,BillOfLadingNumber,cust.Name As CustomerName, Shipper,sc.[Sales Code] As SalesCode, sc.Description, sc.[Unit of Measure] As UnitOfMeasure, lineitem.Quantity As Qty, -- table3
sc.Price, lineitem.Quantity * Isnull(sc.Price, 0) As Ext from tblLineItems_Shipping lineitem
inner join tblShippingInfo_LineItems info on info.lineItemID = lineitem.lineItemID
Left join tblCustomers cust on cust.customerID = lineitem.customerID
left join tblShippers ship on ship.shipperID = lineitem.shipperID
left join tblSalesCodes sc on sc.salesCodeID = lineitem.salesCodeID
where shippingID = @shippingId and info.deleted = 0
order by lineitemId
--where lineItemID in (select lineItemid from tblShippingInfo_LineItems where shippingID = 110544)

Exec Customers_GetAll -- table 3

Exec Shippers_GetAll -- table 4

Exec SalesCode_GetAll -- table 5


select  @shippingId shippingID, '' lineitemid, '' BillOfLadingNumber, '' As CustomerName, '' Shipper,'' As SalesCode, '' [Description], '' As UnitOfMeasure, 0 As Qty, -- table6
0 As Price, 0 As Ext

END

GO
