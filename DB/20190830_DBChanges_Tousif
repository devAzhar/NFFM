CREATE procedure ShippedDate_GetAll
AS BEGIN
select distinct ShippedDate from tblShippingInfo where Deleted = 0 and ShippedDate is not null order by ShippedDate desc
END
GO
CREATE Procedure FreightForwardingBOL_Report_GetAll --'1/1/2019', 'q'
(
@shippedDate datetime = '',
@batchId nvarchar(50) = '',
@invoiceNumber nvarchar(50) = null,
@billOfLadingNumber nvarchar(50) = '',
@customerName nvarchar(200) = ''
)

As Begin
--SELECT TOP (1) SUBSTRING(CONVERT(CHAR(10), GETDATE(), 12),3,4), Format(GETDATE(),'MMdd')
if (@shippedDate = '')
BEGIN
set @shippedDate = (select max(ShippedDate) from tblShippingInfo where Deleted = 0 and ShippedDate is not null)
END
--Format([WeekEndingDate],'MMdd') + Right(LTRIM(RTrim([Customer No])),2) + SUBSTRING([Customer No],4,1)
select top 20 ShippedDate,BatchID, SUBSTRING(CONVERT(CHAR(10), WeekEndingDate, 12),3,4) + Right(LTRIM(RTrim([Customer No])),2) + SUBSTRING([Customer No],4,1) As InvoiceNumber, info.shippingID,info.lineitemid,BillOfLadingNumber,cust.Name As CustomerName,
 Shipper,
sc.[Sales Code] As SalesCode, sc.Description, sc.[Unit of Measure] As UnitOfMeasure, lineitem.Quantity As Qty, 
-- table3
sc.Price, lineitem.Quantity * Isnull(sc.Price, 0) As Ext from tblLineItems_Shipping lineitem
inner join tblShippingInfo_LineItems info on info.lineItemID = lineitem.lineItemID
inner join tblShippingInfo on tblShippingInfo.shippingID = info.shippingID
Left join tblCustomers cust on cust.customerID = lineitem.customerID
left join tblShippers ship on ship.shipperID = lineitem.shipperID
left join tblSalesCodes sc on sc.salesCodeID = lineitem.salesCodeID
where (@shippedDate = '' or ShippedDate = @shippedDate)
	AND (@batchId = '' or BatchID = @batchId)
	AND (@invoiceNumber is null ) --or invoi = @invoiceNumber)
	AND (@billOfLadingNumber = '' or BillOfLadingNumber = @billOfLadingNumber)
	AND (@customerName = '' or Name = @customerName)
	AND info.deleted = 0
order by lineitemId
--where lineItemID in (select lineItemid from tblShippingInfo_LineItems where receivingId = 110544)


Exec ShippedDate_GetAll -- table 2

Exec Batches_GetAll -- table 3

Exec BillOfLadingNumbers_GetAll -- table 4

Exec Customers_GetAll -- table 5

END

GO
CREATE procedure FreightForwardingBOL_AddUpdate
(
@shippingId  As nvarchar(50),
@lineItemId   As nvarchar(50),
@billOfLading As nvarchar(50),
@customerName As nvarchar(200),
@shipper 	  As nvarchar(50),
@salesCode 	  As nvarchar(50),
@quantity     As nvarchar(10),
@ShippedDate As nvarchar(20),
@weekEndingDate As nvarchar(20),
@truckerId    As nvarchar(10) = 0,
@batchId	  As nvarchar(50) = ''
)
As
BEGIN

Declare @customerId as int = 0,
@shipperId as int = 0,
@salesCodeId as int = 0,
@newCustomerId as int = 0,
@newShipperId as int = 0,
@newSalesCodeId as int = 0

Set @newCustomerId = (select Distinct top 1 CustomerId From tblCustomers where name = @customerName)
Set @newShipperId = (select Distinct top 1 ShipperId From tblShippers where Shipper = @shipper)
Set @newSalesCodeId = (Select Distinct top 1 SalesCodeId from tblSalesCodes where [Sales Code] = @salesCode)

If @truckerId > 0 AND @shippingId = '0'
BEGIN


set @shippingId = (select max(shippingID) from tblShippingInfo) + 1

Insert into tblShippingInfo
values(@shippingId, @truckerId, @ShippedDate, @weekEndingDate, @batchId, 0)

END
ELSE If @truckerId > 0 AND @shippingId <> '0'
BEGIN

Update tblShippingInfo 
set truckerID = @truckerId 
where shippingID = @shippingId

END
ELSE IF @batchId <> ''
BEGIN

Update tblShippingInfo 
set BatchID = @batchId 
where shippingID = @shippingId

END
ELSE IF (@ShippedDate <> '' or @weekEndingDate <> '')
BEGIN

Update tblShippingInfo 
set ShippedDate = @ShippedDate, 
	WeekEndingDate = @weekEndingDate
where shippingID = @shippingId

END
ELSE IF (@shippingId <> '' AND @lineItemId = '')
BEGIN

set @lineItemId = (select max(lineItemId) from tblLineItems_Shipping) + 1

insert into tblShippingInfo_LineItems
values(@shippingId, @lineItemId, 0)
 
insert into tblLineItems_Shipping
values(@lineItemId, @billOfLading, ISNULL(@newCustomerId, -1), ISNULL(@newShipperId, -1), ISNULL(@newSalesCodeId, -1), ISNULL(@quantity, -1), 0)

--delete from tblLineItems_Shipping where lineitemId > 1421522
--delete from tblShippingInfo_LineItems where lineitemId > 1421522
END
ELSE
BEGIN 

select @customerId = customerId, @shipperId = shipperID, @salesCodeId = salesCodeID From tblLineItems_Shipping lineitem
inner join tblShippingInfo_LineItems info on info.lineItemID = lineitem.lineItemID where lineitem.lineItemID = @lineItemId ANd shippingID = @shippingId;



BEGIN TRANSACTION;

update tblLineItems_Shipping
set BillOfLadingNumber = @billOfLading,
	Quantity = @quantity,
	CustomerId = @newCustomerId,
	ShipperId = @newShipperId,
	SalesCodeId = @newSalesCodeId
where lineItemID = @lineItemId --AND customerID = @CustomerId



COMMIT;

END
END


--110550	1421521

